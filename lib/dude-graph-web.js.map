{"version":3,"file":"dude-graph-web.js","sources":["../node_modules/lodash-es/isArray.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/isString.js","../node_modules/lodash-es/isNumber.js","../node_modules/lodash-es/isBoolean.js","../node_modules/lodash-es/isObject.js","../node_modules/lodash-es/_checkGlobal.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/isSymbol.js","../node_modules/lodash-es/_baseToString.js","../node_modules/lodash-es/toString.js","../node_modules/lodash-es/isFunction.js","../node_modules/lodash-es/toNumber.js","../node_modules/event-class/EventClass.js","graph/graph.js","graph/variable.js","graph/block.js","graph/point.js","graph/connection.js"],"sourcesContent":["/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @type {Function}\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import isArray from './isArray';\nimport isObjectLike from './isObjectLike';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nexport default isString;\n","import isObjectLike from './isObjectLike';\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && objectToString.call(value) == numberTag);\n}\n\nexport default isNumber;\n","import isObjectLike from './isObjectLike';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && objectToString.call(value) == boolTag);\n}\n\nexport default isBoolean;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","/**\n * Checks if `value` is a global object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n */\nfunction checkGlobal(value) {\n  return (value && value.Object === Object) ? value : null;\n}\n\nexport default checkGlobal;\n","import checkGlobal from './_checkGlobal';\n\n/** Used to determine if values are of the language type `Object`. */\nvar objectTypes = {\n  'function': true,\n  'object': true\n};\n\n/** Detect free variable `exports`. */\nvar freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)\n  ? exports\n  : undefined;\n\n/** Detect free variable `module`. */\nvar freeModule = (objectTypes[typeof module] && module && !module.nodeType)\n  ? module\n  : undefined;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\n/** Detect free variable `self`. */\nvar freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n/** Detect free variable `window`. */\nvar freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n/** Detect `this` as the global object. */\nvar thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n/**\n * Used as a reference to the global object.\n *\n * The `this` value is used if it's the global object to avoid Greasemonkey's\n * restricted `window` object, otherwise the `window` object is used.\n */\nvar root = freeGlobal ||\n  ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||\n    freeSelf || thisGlobal || Function('return this')();\n\nexport default root;\n","import root from './_root';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import isObjectLike from './isObjectLike';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import Symbol from './_Symbol';\nimport isSymbol from './isSymbol';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","import baseToString from './_baseToString';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import isObject from './isObject';\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array and weak map constructors,\n  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\nexport default isFunction;\n","import isFunction from './isFunction';\nimport isObject from './isObject';\nimport isSymbol from './isSymbol';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = isFunction(value.valueOf) ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","const multiChannelSep = /(?:,|\\s)+/g;\r\nconst channelSep = /:+/g;\r\n\r\nclass EventClass {\r\n    constructor(){\r\n        this._channels = {};\r\n    }\r\n\r\n    _getChannels(channelString){\r\n        return channelString.trim().split(multiChannelSep);\r\n    }\r\n\r\n    _getNameSpaces(channel){\r\n        let namespaces = [];\r\n        let splittedChannels = channel.trim().split(channelSep);\r\n\r\n        for (var i = splittedChannels.length; i >= 1; i--) {\r\n            namespaces.push(splittedChannels.slice(0, i).join(\":\"))\r\n        }\r\n\r\n        return namespaces;\r\n    }\r\n\r\n    trigger(event, data){\r\n        let channels = this._getChannels(event);\r\n\r\n        for (let channel of channels){\r\n            let namespaces = this._getNameSpaces(channel);\r\n            for (let namespace of namespaces){\r\n                if(!this._channels[namespace]){\r\n                    continue;\r\n                }\r\n\r\n                for(let callback of this._channels[namespace]){\r\n                    callback.call(this, data);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    on(event, callback){\r\n        let channels = this._getChannels(event);\r\n\r\n        for (let channel of channels){\r\n            if(!this._channels[channel]){\r\n                this._channels[channel] = [];\r\n            }\r\n\r\n            this._channels[channel].push(callback);\r\n        }\r\n    }\r\n\r\n    off(event, callback){\r\n        let channels = this._getChannels(event);\r\n\r\n        for (let channel of channels){\r\n            if(!this._channels[channel]){\r\n                return;\r\n            }\r\n\r\n            let index = this._channels[channel].indexOf(callback);\r\n\r\n            if(index > -1){\r\n                this._channels[channel].splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    once(event, callback){\r\n        function offCallback(){\r\n            this.off(event, callback);\r\n            this.off(event, offCallback);\r\n        }\r\n\r\n        this.on(event, callback);\r\n        this.on(event, offCallback);\r\n    }\r\n}\r\n\r\nexport default EventClass;","import isString from \"lodash-es/isString\";\r\nimport isNumber from \"lodash-es/isNumber\";\r\nimport isBoolean from \"lodash-es/isBoolean\";\r\nimport isObject from \"lodash-es/isObject\";\r\nimport isArray from \"lodash-es/isArray\";\r\nimport toString from \"lodash-es/toString\";\r\nimport toNumber from \"lodash-es/toNumber\";\r\nimport EventClass from \"event-class\";\r\n\r\nexport default class Graph extends EventClass {\r\n\r\n    constructor() {\r\n        super();\r\n        this._valueTypes = {\r\n            \"Stream\": {\r\n                \"convert\": () => undefined,\r\n                \"typeCompatibles\": []\r\n            },\r\n            \"String\": {\r\n                \"typeConvert\": (value) => {\r\n                    if (isString(value)) {\r\n                        return value;\r\n                    }\r\n                    if (isNumber(value) || isBoolean(value)) {\r\n                        return toString(value);\r\n                    }\r\n                    return undefined;\r\n                },\r\n                \"typeCompatibles\": [\"Text\", \"Number\", \"Boolean\"]\r\n            },\r\n            \"Text\": {\r\n                \"typeConvert\": (value) => {\r\n                    if (isString(value)) {\r\n                        return value;\r\n                    }\r\n                    if (isNumber(value) || isBoolean(value)) {\r\n                        return toString(value);\r\n                    }\r\n                    return undefined;\r\n                },\r\n                \"typeCompatibles\": [\"String\", \"Number\", \"Boolean\"]\r\n            },\r\n            \"Number\": {\r\n                \"typeConvert\": (value) => {\r\n                    if (isNumber(value)) {\r\n                        return value;\r\n                    }\r\n                    if (/^[-+]?[0-9]+(\\.[0-9]+)?$/.test(value)) {\r\n                        return toNumber(value);\r\n                    }\r\n                    if (value === \"true\" || value === true) {\r\n                        return 1;\r\n                    }\r\n                    if (value === \"false\" || value === false) {\r\n                        return 0;\r\n                    }\r\n                    return undefined;\r\n                },\r\n                \"typeCompatibles\": [\"Boolean\"]\r\n            },\r\n            \"Boolean\": {\r\n                \"typeConvert\": (value) => {\r\n                    if (isBoolean(value)) {\r\n                        return value;\r\n                    }\r\n                    if (value === 1 || value === \"true\") {\r\n                        return true;\r\n                    }\r\n                    if (value === 0 || value === \"false\") {\r\n                        return false;\r\n                    }\r\n                    return undefined;\r\n                },\r\n                \"typeCompatibles\": [\"Number\"]\r\n            },\r\n            \"Object\": {\r\n                \"typeConvert\": (value) => {\r\n                    if (isObject(value)) {\r\n                        return value;\r\n                    }\r\n                    return undefined;\r\n                },\r\n                \"typeCompatibles\": []\r\n            },\r\n            \"Array\": {\r\n                \"typeConvert\": (value) => {\r\n                    if (isArray(value)) {\r\n                        return value;\r\n                    }\r\n                    return undefined;\r\n                },\r\n                \"typeCompatibles\": []\r\n            },\r\n            \"Resource\": {\r\n                \"typeConvert\": (value) => {\r\n                    if (isObject(value)) {\r\n                        return value;\r\n                    }\r\n                    return undefined;\r\n                },\r\n                \"typeCompatibles\": []\r\n            }\r\n        };\r\n    }\r\n\r\n    get models() {}\r\n    get blocks() {}\r\n    get variables() {}\r\n    get connections() {}\r\n\r\n    query() {}\r\n\r\n    addBlock() {}\r\n    removeBlock() {}\r\n    blockById() {}\r\n    blocksByName() {}\r\n    blocksByType() {}\r\n\r\n    addVariable() {}\r\n    removeVariable() {}\r\n    variableById() {}\r\n    variablesByType() {}\r\n\r\n    connect() {}\r\n    disconnect() {}\r\n\r\n}\r\n\r\n/**\r\n * @typedef {Object} Graph.templateTypedef\r\n * @property {String} valueType\r\n * @property {Array<String>} templates\r\n */\r\n","import EventClass from \"event-class\";\r\n\r\nexport default class Variable extends EventClass {\r\n\r\n    added() {}\r\n    removed() {}\r\n\r\n    changeValue() {}\r\n\r\n}\r\n","import EventClass from \"event-class\";\r\n\r\nexport default class Block extends EventClass {\r\n\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    get id() {}\r\n    get name() {}\r\n    get inputs() {}\r\n    get outputs() {}\r\n\r\n    added() {}\r\n    pointAdded() {}\r\n    pointConnected() {}\r\n    pointValueChanged() {}\r\n    pointDisconnected() {}\r\n    pointRemoved() {}\r\n    removed() {}\r\n\r\n    changeTemplate() {}\r\n    templateById() {}\r\n\r\n    addPoint() {}\r\n    removePoint() {}\r\n    removePoints() {}\r\n    inputByName() {}\r\n    outputByName() {}\r\n\r\n    static create() {}\r\n\r\n}\r\n\r\n/**\r\n * @typedef {Object} dudeGraph.Block.blockDataTypedef\r\n * @property {String|null} [id=null]\r\n * @property {String} name\r\n * @property {Object<String, Graph.templateTypedef>} [blockTemplates={}]\r\n */\r\n","import EventClass from \"event-class\";\r\n\r\nexport default class Point extends EventClass {\r\n\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    get name() {}\r\n    get valueType() {}\r\n    get value() {}\r\n\r\n    added() {}\r\n    accept() {}\r\n    removed() {}\r\n\r\n    changeValue() {}\r\n    changeValueType() {}\r\n\r\n    empty() {}\r\n    emptyValue() {}\r\n    emptyConnection() {}\r\n\r\n    connect() {}\r\n    disconnect() {}\r\n    disconnectAll() {}\r\n\r\n    connected() {}\r\n\r\n    static create() {}\r\n\r\n}\r\n","import EventClass from \"event-class\";\r\n\r\nexport default class Connection extends EventClass {\r\n\r\n    other() {}\r\n    remove() {}\r\n\r\n}\r\n"],"names":["objectProto","objectToString"],"mappings":"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","sourceRoot":"/source/"}