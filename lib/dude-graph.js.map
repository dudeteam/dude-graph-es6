{"version":3,"file":"dude-graph.js","sources":["graph/graph.js","graph/variable.js","graph/block.js","graph/point.js","graph/connection.js"],"sourcesContent":["import isString from \"lodash-es/isString\";\r\nimport isNumber from \"lodash-es/isNumber\";\r\nimport isBoolean from \"lodash-es/isBoolean\";\r\nimport isObject from \"lodash-es/isObject\";\r\nimport isArray from \"lodash-es/isArray\";\r\nimport toString from \"lodash-es/toString\";\r\nimport toNumber from \"lodash-es/toNumber\";\r\nimport EventClass from \"event-class\";\r\n\r\nexport default class Graph extends EventClass {\r\n\r\n    constructor() {\r\n        super();\r\n        this._valueTypes = {\r\n            \"Stream\": {\r\n                \"convert\": () => undefined,\r\n                \"typeCompatibles\": []\r\n            },\r\n            \"String\": {\r\n                \"typeConvert\": (value) => {\r\n                    if (isString(value)) {\r\n                        return value;\r\n                    }\r\n                    if (isNumber(value) || isBoolean(value)) {\r\n                        return toString(value);\r\n                    }\r\n                    return undefined;\r\n                },\r\n                \"typeCompatibles\": [\"Text\", \"Number\", \"Boolean\"]\r\n            },\r\n            \"Text\": {\r\n                \"typeConvert\": (value) => {\r\n                    if (isString(value)) {\r\n                        return value;\r\n                    }\r\n                    if (isNumber(value) || isBoolean(value)) {\r\n                        return toString(value);\r\n                    }\r\n                    return undefined;\r\n                },\r\n                \"typeCompatibles\": [\"String\", \"Number\", \"Boolean\"]\r\n            },\r\n            \"Number\": {\r\n                \"typeConvert\": (value) => {\r\n                    if (isNumber(value)) {\r\n                        return value;\r\n                    }\r\n                    if (/^[-+]?[0-9]+(\\.[0-9]+)?$/.test(value)) {\r\n                        return toNumber(value);\r\n                    }\r\n                    if (value === \"true\" || value === true) {\r\n                        return 1;\r\n                    }\r\n                    if (value === \"false\" || value === false) {\r\n                        return 0;\r\n                    }\r\n                    return undefined;\r\n                },\r\n                \"typeCompatibles\": [\"Boolean\"]\r\n            },\r\n            \"Boolean\": {\r\n                \"typeConvert\": (value) => {\r\n                    if (isBoolean(value)) {\r\n                        return value;\r\n                    }\r\n                    if (value === 1 || value === \"true\") {\r\n                        return true;\r\n                    }\r\n                    if (value === 0 || value === \"false\") {\r\n                        return false;\r\n                    }\r\n                    return undefined;\r\n                },\r\n                \"typeCompatibles\": [\"Number\"]\r\n            },\r\n            \"Object\": {\r\n                \"typeConvert\": (value) => {\r\n                    if (isObject(value)) {\r\n                        return value;\r\n                    }\r\n                    return undefined;\r\n                },\r\n                \"typeCompatibles\": []\r\n            },\r\n            \"Array\": {\r\n                \"typeConvert\": (value) => {\r\n                    if (isArray(value)) {\r\n                        return value;\r\n                    }\r\n                    return undefined;\r\n                },\r\n                \"typeCompatibles\": []\r\n            },\r\n            \"Resource\": {\r\n                \"typeConvert\": (value) => {\r\n                    if (isObject(value)) {\r\n                        return value;\r\n                    }\r\n                    return undefined;\r\n                },\r\n                \"typeCompatibles\": []\r\n            }\r\n        };\r\n    }\r\n\r\n    get models() {}\r\n    get blocks() {}\r\n    get variables() {}\r\n    get connections() {}\r\n\r\n    query() {}\r\n\r\n    addBlock() {}\r\n    removeBlock() {}\r\n    blockById() {}\r\n    blocksByName() {}\r\n    blocksByType() {}\r\n\r\n    addVariable() {}\r\n    removeVariable() {}\r\n    variableById() {}\r\n    variablesByType() {}\r\n\r\n    connect() {}\r\n    disconnect() {}\r\n\r\n}\r\n\r\n/**\r\n * @typedef {Object} Graph.templateTypedef\r\n * @property {String} valueType\r\n * @property {Array<String>} templates\r\n */\r\n","import EventClass from \"event-class\";\r\n\r\nexport default class Variable extends EventClass {\r\n\r\n    added() {}\r\n    removed() {}\r\n\r\n    changeValue() {}\r\n\r\n}\r\n","import EventClass from \"event-class\";\r\n\r\nexport default class Block extends EventClass {\r\n\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    get id() {}\r\n    get name() {}\r\n    get inputs() {}\r\n    get outputs() {}\r\n\r\n    added() {}\r\n    pointAdded() {}\r\n    pointConnected() {}\r\n    pointValueChanged() {}\r\n    pointDisconnected() {}\r\n    pointRemoved() {}\r\n    removed() {}\r\n\r\n    changeTemplate() {}\r\n    templateById() {}\r\n\r\n    addPoint() {}\r\n    removePoint() {}\r\n    removePoints() {}\r\n    inputByName() {}\r\n    outputByName() {}\r\n\r\n    static create() {}\r\n\r\n}\r\n\r\n/**\r\n * @typedef {Object} dudeGraph.Block.blockDataTypedef\r\n * @property {String|null} [id=null]\r\n * @property {String} name\r\n * @property {Object<String, Graph.templateTypedef>} [blockTemplates={}]\r\n */\r\n","import EventClass from \"event-class\";\r\n\r\nexport default class Point extends EventClass {\r\n\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    get name() {}\r\n    get valueType() {}\r\n    get value() {}\r\n\r\n    added() {}\r\n    accept() {}\r\n    removed() {}\r\n\r\n    changeValue() {}\r\n    changeValueType() {}\r\n\r\n    empty() {}\r\n    emptyValue() {}\r\n    emptyConnection() {}\r\n\r\n    connect() {}\r\n    disconnect() {}\r\n    disconnectAll() {}\r\n\r\n    connected() {}\r\n\r\n    static create() {}\r\n\r\n}\r\n","import EventClass from \"event-class\";\r\n\r\nexport default class Connection extends EventClass {\r\n\r\n    other() {}\r\n    remove() {}\r\n\r\n}\r\n"],"names":[],"mappings":"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","sourceRoot":"/source/"}